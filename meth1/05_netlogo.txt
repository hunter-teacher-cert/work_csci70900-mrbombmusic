Intro to Netlogo

My introduction to Netlogo would involve introducing students to the
interface and start them off by first entering some basic commands into the
command center which involved moving the turtle around and making a few designs
with the pen. I would then move them over to coding a short program, going over some
basic syntax, commands and program structure. I would also give a quick demo on
how to make a button to execute parts of their code. I would give them some
creative freedom to see what type of things they would make. To wrap up the lesson,
I would have them take a look at the mode library and give them a chance to explore
a bit, providing a few reflection questions to finish with about what they observed that
looked familiar to what they had made themselves, things that did not look familiar and
things that they hadn't done but had some idea about what it was doing.


My reasoning for starting them off this way is that I want to get them using the language
on their own immediately to get some hands on experience under their belt. I feel
that starting with a blank canvas provides more open-ended possibilities for them
and it is great to see where they take it when they dont have any preconceived notion
about what to do. I also like to encourage them not to feel constrained by what they don't know.
I think it is important to start them off with the mindset of aiming for what they
WANT to do rather than what they can do. I often tell students that you can usually
find a way to do something when coding, you just have to figure out how. After having a little
time to experiment, they get some foundation and experience in how the programming
language works and they can have a sense of accomplishment very early on which can
motivate them to progress further.

Once they have some basic working knowledge, I feel they can then understand and appreciate the models
on a deeper level then if they had looked at them before knowing anything about how
the language works. This way the models can serve to inform and inspire them because
they have a better understanding of what they are looking at. I also think that if
they look at some very cool models first and then move to doing some very basic programs,
they may have a sense that what they are doing pales in comparison to the models causing them
to get frustrated or discouraged.
